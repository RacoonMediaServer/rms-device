version: '3'
services:     
  db:
    image: mongo
    restart: always
    container_name: mongo

  bot-client:
    image: racoonmediaserver/bot-client:latest
    restart: always
    container_name: bot-client
    environment:
      - RMS_DEVICE=${DEVICE}
      - RMS_REMOTE_HOST=${REMOTE_HOST}
      - RMS_REMOTE_PORT=${REMOTE_PORT}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  torrent:
    image: racoonmediaserver/torrent:latest
    restart: always
    container_name: torrent
    environment:
      - RMS_TORRENTS_DB=/media/db
      - RMS_TORRENTS_DIRECTORY=/media
    volumes:
      - ${MEDIA}/torrents:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  library:
    image: racoonmediaserver/library:latest
    restart: always
    container_name: library
    environment:
      - RMS_DEVICE=${DEVICE}
      - RMS_DATABASE=mongodb://db:27017/library
      - RMS_REMOTE_HOST=${REMOTE_HOST}
      - RMS_REMOTE_PORT=${REMOTE_PORT}
    volumes:
      - ${MEDIA}:/media/library
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - db

  notifier:
    image: racoonmediaserver/notifier:latest
    restart: always
    container_name: notifier_v2
    environment:
      - RMS_DEVICE=${DEVICE}
      - RMS_DATABASE=mongodb://db:27017/notifier
      - RMS_REMOTE_HOST=${REMOTE_HOST}
      - RMS_REMOTE_PORT=${REMOTE_PORT}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - db
  
  dlna:
    container_name: dlna
    build: ./serviio
    restart: always
    environment:
      - RMS_IP_ADDR=${INTERFACE_IP}
    volumes:
      - ./serviio/config:/opt/serviio/config
      - ${MEDIA}:/media/library
    network_mode: "host"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --label-enable
